#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18408
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace _4_DTO
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QL_BOOKSTORE")]
	public partial class QLNSModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertTON(TON instance);
    partial void UpdateTON(TON instance);
    partial void DeleteTON(TON instance);
    partial void InsertCONGNO(CONGNO instance);
    partial void UpdateCONGNO(CONGNO instance);
    partial void DeleteCONGNO(CONGNO instance);
    partial void InsertCTHD(CTHD instance);
    partial void UpdateCTHD(CTHD instance);
    partial void DeleteCTHD(CTHD instance);
    partial void InsertCTPN(CTPN instance);
    partial void UpdateCTPN(CTPN instance);
    partial void DeleteCTPN(CTPN instance);
    partial void InsertHOADON(HOADON instance);
    partial void UpdateHOADON(HOADON instance);
    partial void DeleteHOADON(HOADON instance);
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertNHAP(NHAP instance);
    partial void UpdateNHAP(NHAP instance);
    partial void DeleteNHAP(NHAP instance);
    partial void InsertSACH(SACH instance);
    partial void UpdateSACH(SACH instance);
    partial void DeleteSACH(SACH instance);
    partial void InsertTHAMSO(THAMSO instance);
    partial void UpdateTHAMSO(THAMSO instance);
    partial void DeleteTHAMSO(THAMSO instance);
    partial void InsertTHUTIEN(THUTIEN instance);
    partial void UpdateTHUTIEN(THUTIEN instance);
    partial void DeleteTHUTIEN(THUTIEN instance);
    #endregion
		
		public QLNSModelDataContext() : 
				base(global::_4_DTO.Properties.Settings.Default.QL_BOOKSTOREConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QLNSModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<TON> TONs
		{
			get
			{
				return this.GetTable<TON>();
			}
		}
		
		public System.Data.Linq.Table<CONGNO> CONGNOs
		{
			get
			{
				return this.GetTable<CONGNO>();
			}
		}
		
		public System.Data.Linq.Table<CTHD> CTHDs
		{
			get
			{
				return this.GetTable<CTHD>();
			}
		}
		
		public System.Data.Linq.Table<CTPN> CTPNs
		{
			get
			{
				return this.GetTable<CTPN>();
			}
		}
		
		public System.Data.Linq.Table<HOADON> HOADONs
		{
			get
			{
				return this.GetTable<HOADON>();
			}
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<NHAP> NHAPs
		{
			get
			{
				return this.GetTable<NHAP>();
			}
		}
		
		public System.Data.Linq.Table<SACH> SACHes
		{
			get
			{
				return this.GetTable<SACH>();
			}
		}
		
		public System.Data.Linq.Table<THAMSO> THAMSOs
		{
			get
			{
				return this.GetTable<THAMSO>();
			}
		}
		
		public System.Data.Linq.Table<THUTIEN> THUTIENs
		{
			get
			{
				return this.GetTable<THUTIEN>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TON")]
	public partial class TON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATON;
		
		private System.Nullable<int> _THANG;
		
		private System.Nullable<int> _TONDAU;
		
		private System.Nullable<int> _TONPHATSINH;
		
		private System.Nullable<int> _TONCUOI;
		
		private string _MASACH;
		
		private EntityRef<SACH> _SACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATONChanging(string value);
    partial void OnMATONChanged();
    partial void OnTHANGChanging(System.Nullable<int> value);
    partial void OnTHANGChanged();
    partial void OnTONDAUChanging(System.Nullable<int> value);
    partial void OnTONDAUChanged();
    partial void OnTONPHATSINHChanging(System.Nullable<int> value);
    partial void OnTONPHATSINHChanged();
    partial void OnTONCUOIChanging(System.Nullable<int> value);
    partial void OnTONCUOIChanged();
    partial void OnMASACHChanging(string value);
    partial void OnMASACHChanged();
    #endregion
		
		public TON()
		{
			this._SACH = default(EntityRef<SACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATON", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATON
		{
			get
			{
				return this._MATON;
			}
			set
			{
				if ((this._MATON != value))
				{
					this.OnMATONChanging(value);
					this.SendPropertyChanging();
					this._MATON = value;
					this.SendPropertyChanged("MATON");
					this.OnMATONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANG", DbType="Int")]
		public System.Nullable<int> THANG
		{
			get
			{
				return this._THANG;
			}
			set
			{
				if ((this._THANG != value))
				{
					this.OnTHANGChanging(value);
					this.SendPropertyChanging();
					this._THANG = value;
					this.SendPropertyChanged("THANG");
					this.OnTHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONDAU", DbType="Int")]
		public System.Nullable<int> TONDAU
		{
			get
			{
				return this._TONDAU;
			}
			set
			{
				if ((this._TONDAU != value))
				{
					this.OnTONDAUChanging(value);
					this.SendPropertyChanging();
					this._TONDAU = value;
					this.SendPropertyChanged("TONDAU");
					this.OnTONDAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONPHATSINH", DbType="Int")]
		public System.Nullable<int> TONPHATSINH
		{
			get
			{
				return this._TONPHATSINH;
			}
			set
			{
				if ((this._TONPHATSINH != value))
				{
					this.OnTONPHATSINHChanging(value);
					this.SendPropertyChanging();
					this._TONPHATSINH = value;
					this.SendPropertyChanged("TONPHATSINH");
					this.OnTONPHATSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TONCUOI", DbType="Int")]
		public System.Nullable<int> TONCUOI
		{
			get
			{
				return this._TONCUOI;
			}
			set
			{
				if ((this._TONCUOI != value))
				{
					this.OnTONCUOIChanging(value);
					this.SendPropertyChanging();
					this._TONCUOI = value;
					this.SendPropertyChanged("TONCUOI");
					this.OnTONCUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASACH", DbType="Char(10)")]
		public string MASACH
		{
			get
			{
				return this._MASACH;
			}
			set
			{
				if ((this._MASACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASACHChanging(value);
					this.SendPropertyChanging();
					this._MASACH = value;
					this.SendPropertyChanged("MASACH");
					this.OnMASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_TON", Storage="_SACH", ThisKey="MASACH", OtherKey="MASACH", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.TONs.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.TONs.Add(this);
						this._MASACH = value.MASACH;
					}
					else
					{
						this._MASACH = default(string);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONGNO")]
	public partial class CONGNO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACONGNO;
		
		private string _MAKH;
		
		private System.Nullable<int> _THANG;
		
		private System.Nullable<decimal> _NODAU;
		
		private System.Nullable<decimal> _NOPHATSINH;
		
		private System.Nullable<decimal> _NOCUOI;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACONGNOChanging(string value);
    partial void OnMACONGNOChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnTHANGChanging(System.Nullable<int> value);
    partial void OnTHANGChanged();
    partial void OnNODAUChanging(System.Nullable<decimal> value);
    partial void OnNODAUChanged();
    partial void OnNOPHATSINHChanging(System.Nullable<decimal> value);
    partial void OnNOPHATSINHChanged();
    partial void OnNOCUOIChanging(System.Nullable<decimal> value);
    partial void OnNOCUOIChanged();
    #endregion
		
		public CONGNO()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACONGNO", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACONGNO
		{
			get
			{
				return this._MACONGNO;
			}
			set
			{
				if ((this._MACONGNO != value))
				{
					this.OnMACONGNOChanging(value);
					this.SendPropertyChanging();
					this._MACONGNO = value;
					this.SendPropertyChanged("MACONGNO");
					this.OnMACONGNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THANG", DbType="Int")]
		public System.Nullable<int> THANG
		{
			get
			{
				return this._THANG;
			}
			set
			{
				if ((this._THANG != value))
				{
					this.OnTHANGChanging(value);
					this.SendPropertyChanging();
					this._THANG = value;
					this.SendPropertyChanged("THANG");
					this.OnTHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NODAU", DbType="Money")]
		public System.Nullable<decimal> NODAU
		{
			get
			{
				return this._NODAU;
			}
			set
			{
				if ((this._NODAU != value))
				{
					this.OnNODAUChanging(value);
					this.SendPropertyChanging();
					this._NODAU = value;
					this.SendPropertyChanged("NODAU");
					this.OnNODAUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOPHATSINH", DbType="Money")]
		public System.Nullable<decimal> NOPHATSINH
		{
			get
			{
				return this._NOPHATSINH;
			}
			set
			{
				if ((this._NOPHATSINH != value))
				{
					this.OnNOPHATSINHChanging(value);
					this.SendPropertyChanging();
					this._NOPHATSINH = value;
					this.SendPropertyChanged("NOPHATSINH");
					this.OnNOPHATSINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NOCUOI", DbType="Money")]
		public System.Nullable<decimal> NOCUOI
		{
			get
			{
				return this._NOCUOI;
			}
			set
			{
				if ((this._NOCUOI != value))
				{
					this.OnNOCUOIChanging(value);
					this.SendPropertyChanging();
					this._NOCUOI = value;
					this.SendPropertyChanged("NOCUOI");
					this.OnNOCUOIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_CONGNO", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.CONGNOs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.CONGNOs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTHD")]
	public partial class CTHD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACTHD;
		
		private string _MASACH;
		
		private string _MAHD;
		
		private System.Nullable<int> _SL_BAN;
		
		private EntityRef<HOADON> _HOADON;
		
		private EntityRef<SACH> _SACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACTHDChanging(string value);
    partial void OnMACTHDChanged();
    partial void OnMASACHChanging(string value);
    partial void OnMASACHChanged();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnSL_BANChanging(System.Nullable<int> value);
    partial void OnSL_BANChanged();
    #endregion
		
		public CTHD()
		{
			this._HOADON = default(EntityRef<HOADON>);
			this._SACH = default(EntityRef<SACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACTHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACTHD
		{
			get
			{
				return this._MACTHD;
			}
			set
			{
				if ((this._MACTHD != value))
				{
					this.OnMACTHDChanging(value);
					this.SendPropertyChanging();
					this._MACTHD = value;
					this.SendPropertyChanged("MACTHD");
					this.OnMACTHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASACH", DbType="Char(10)")]
		public string MASACH
		{
			get
			{
				return this._MASACH;
			}
			set
			{
				if ((this._MASACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASACHChanging(value);
					this.SendPropertyChanging();
					this._MASACH = value;
					this.SendPropertyChanged("MASACH");
					this.OnMASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(10)")]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					if (this._HOADON.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_BAN", DbType="Int")]
		public System.Nullable<int> SL_BAN
		{
			get
			{
				return this._SL_BAN;
			}
			set
			{
				if ((this._SL_BAN != value))
				{
					this.OnSL_BANChanging(value);
					this.SendPropertyChanging();
					this._SL_BAN = value;
					this.SendPropertyChanged("SL_BAN");
					this.OnSL_BANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD", Storage="_HOADON", ThisKey="MAHD", OtherKey="MAHD", IsForeignKey=true)]
		public HOADON HOADON
		{
			get
			{
				return this._HOADON.Entity;
			}
			set
			{
				HOADON previousValue = this._HOADON.Entity;
				if (((previousValue != value) 
							|| (this._HOADON.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HOADON.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._HOADON.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MAHD = value.MAHD;
					}
					else
					{
						this._MAHD = default(string);
					}
					this.SendPropertyChanged("HOADON");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CTHD", Storage="_SACH", ThisKey="MASACH", OtherKey="MASACH", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.CTHDs.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.CTHDs.Add(this);
						this._MASACH = value.MASACH;
					}
					else
					{
						this._MASACH = default(string);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CTPN")]
	public partial class CTPN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MACTPN;
		
		private string _MAPN;
		
		private string _MASACH;
		
		private System.Nullable<int> _SL_NHAP;
		
		private EntityRef<NHAP> _NHAP;
		
		private EntityRef<SACH> _SACH;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMACTPNChanging(string value);
    partial void OnMACTPNChanged();
    partial void OnMAPNChanging(string value);
    partial void OnMAPNChanged();
    partial void OnMASACHChanging(string value);
    partial void OnMASACHChanged();
    partial void OnSL_NHAPChanging(System.Nullable<int> value);
    partial void OnSL_NHAPChanged();
    #endregion
		
		public CTPN()
		{
			this._NHAP = default(EntityRef<NHAP>);
			this._SACH = default(EntityRef<SACH>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MACTPN", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MACTPN
		{
			get
			{
				return this._MACTPN;
			}
			set
			{
				if ((this._MACTPN != value))
				{
					this.OnMACTPNChanging(value);
					this.SendPropertyChanging();
					this._MACTPN = value;
					this.SendPropertyChanged("MACTPN");
					this.OnMACTPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", DbType="Char(10)")]
		public string MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					if (this._NHAP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASACH", DbType="Char(10)")]
		public string MASACH
		{
			get
			{
				return this._MASACH;
			}
			set
			{
				if ((this._MASACH != value))
				{
					if (this._SACH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMASACHChanging(value);
					this.SendPropertyChanging();
					this._MASACH = value;
					this.SendPropertyChanged("MASACH");
					this.OnMASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_NHAP", DbType="Int")]
		public System.Nullable<int> SL_NHAP
		{
			get
			{
				return this._SL_NHAP;
			}
			set
			{
				if ((this._SL_NHAP != value))
				{
					this.OnSL_NHAPChanging(value);
					this.SendPropertyChanging();
					this._SL_NHAP = value;
					this.SendPropertyChanged("SL_NHAP");
					this.OnSL_NHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAP_CTPN", Storage="_NHAP", ThisKey="MAPN", OtherKey="MAPN", IsForeignKey=true)]
		public NHAP NHAP
		{
			get
			{
				return this._NHAP.Entity;
			}
			set
			{
				NHAP previousValue = this._NHAP.Entity;
				if (((previousValue != value) 
							|| (this._NHAP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NHAP.Entity = null;
						previousValue.CTPNs.Remove(this);
					}
					this._NHAP.Entity = value;
					if ((value != null))
					{
						value.CTPNs.Add(this);
						this._MAPN = value.MAPN;
					}
					else
					{
						this._MAPN = default(string);
					}
					this.SendPropertyChanged("NHAP");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CTPN", Storage="_SACH", ThisKey="MASACH", OtherKey="MASACH", IsForeignKey=true)]
		public SACH SACH
		{
			get
			{
				return this._SACH.Entity;
			}
			set
			{
				SACH previousValue = this._SACH.Entity;
				if (((previousValue != value) 
							|| (this._SACH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SACH.Entity = null;
						previousValue.CTPNs.Remove(this);
					}
					this._SACH.Entity = value;
					if ((value != null))
					{
						value.CTPNs.Add(this);
						this._MASACH = value.MASACH;
					}
					else
					{
						this._MASACH = default(string);
					}
					this.SendPropertyChanged("SACH");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOADON")]
	public partial class HOADON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAHD;
		
		private string _MAKH;
		
		private System.Nullable<System.DateTime> _NGAYHD;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAHDChanging(string value);
    partial void OnMAHDChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnNGAYHDChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYHDChanged();
    #endregion
		
		public HOADON()
		{
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAHD", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAHD
		{
			get
			{
				return this._MAHD;
			}
			set
			{
				if ((this._MAHD != value))
				{
					this.OnMAHDChanging(value);
					this.SendPropertyChanging();
					this._MAHD = value;
					this.SendPropertyChanged("MAHD");
					this.OnMAHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYHD", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NGAYHD
		{
			get
			{
				return this._NGAYHD;
			}
			set
			{
				if ((this._NGAYHD != value))
				{
					this.OnNGAYHDChanging(value);
					this.SendPropertyChanging();
					this._NGAYHD = value;
					this.SendPropertyChanged("NGAYHD");
					this.OnNGAYHDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HOADON_CTHD", Storage="_CTHDs", ThisKey="MAHD", OtherKey="MAHD")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.HOADONs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.HOADONs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.HOADON = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAKH;
		
		private string _HOTEN;
		
		private string _DIACHI;
		
		private string _DIENTHOAI;
		
		private string _EMAIL;
		
		private System.Nullable<decimal> _SOTIENNO;
		
		private EntitySet<CONGNO> _CONGNOs;
		
		private EntitySet<HOADON> _HOADONs;
		
		private EntitySet<THUTIEN> _THUTIENs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnHOTENChanging(string value);
    partial void OnHOTENChanged();
    partial void OnDIACHIChanging(string value);
    partial void OnDIACHIChanged();
    partial void OnDIENTHOAIChanging(string value);
    partial void OnDIENTHOAIChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnSOTIENNOChanging(System.Nullable<decimal> value);
    partial void OnSOTIENNOChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._CONGNOs = new EntitySet<CONGNO>(new Action<CONGNO>(this.attach_CONGNOs), new Action<CONGNO>(this.detach_CONGNOs));
			this._HOADONs = new EntitySet<HOADON>(new Action<HOADON>(this.attach_HOADONs), new Action<HOADON>(this.detach_HOADONs));
			this._THUTIENs = new EntitySet<THUTIEN>(new Action<THUTIEN>(this.attach_THUTIENs), new Action<THUTIEN>(this.detach_THUTIENs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HOTEN", DbType="NVarChar(100)")]
		public string HOTEN
		{
			get
			{
				return this._HOTEN;
			}
			set
			{
				if ((this._HOTEN != value))
				{
					this.OnHOTENChanging(value);
					this.SendPropertyChanging();
					this._HOTEN = value;
					this.SendPropertyChanged("HOTEN");
					this.OnHOTENChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIACHI", DbType="NVarChar(100)")]
		public string DIACHI
		{
			get
			{
				return this._DIACHI;
			}
			set
			{
				if ((this._DIACHI != value))
				{
					this.OnDIACHIChanging(value);
					this.SendPropertyChanging();
					this._DIACHI = value;
					this.SendPropertyChanged("DIACHI");
					this.OnDIACHIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DIENTHOAI", DbType="NVarChar(20)")]
		public string DIENTHOAI
		{
			get
			{
				return this._DIENTHOAI;
			}
			set
			{
				if ((this._DIENTHOAI != value))
				{
					this.OnDIENTHOAIChanging(value);
					this.SendPropertyChanging();
					this._DIENTHOAI = value;
					this.SendPropertyChanged("DIENTHOAI");
					this.OnDIENTHOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="NVarChar(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIENNO", DbType="Money")]
		public System.Nullable<decimal> SOTIENNO
		{
			get
			{
				return this._SOTIENNO;
			}
			set
			{
				if ((this._SOTIENNO != value))
				{
					this.OnSOTIENNOChanging(value);
					this.SendPropertyChanging();
					this._SOTIENNO = value;
					this.SendPropertyChanged("SOTIENNO");
					this.OnSOTIENNOChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_CONGNO", Storage="_CONGNOs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<CONGNO> CONGNOs
		{
			get
			{
				return this._CONGNOs;
			}
			set
			{
				this._CONGNOs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_HOADON", Storage="_HOADONs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<HOADON> HOADONs
		{
			get
			{
				return this._HOADONs;
			}
			set
			{
				this._HOADONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_THUTIEN", Storage="_THUTIENs", ThisKey="MAKH", OtherKey="MAKH")]
		public EntitySet<THUTIEN> THUTIENs
		{
			get
			{
				return this._THUTIENs;
			}
			set
			{
				this._THUTIENs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONGNOs(CONGNO entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_CONGNOs(CONGNO entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_HOADONs(HOADON entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
		
		private void attach_THUTIENs(THUTIEN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = this;
		}
		
		private void detach_THUTIENs(THUTIEN entity)
		{
			this.SendPropertyChanging();
			entity.KHACHHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NHAP")]
	public partial class NHAP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MAPN;
		
		private System.Nullable<System.DateTime> _NGAYNHAP;
		
		private EntitySet<CTPN> _CTPNs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMAPNChanging(string value);
    partial void OnMAPNChanged();
    partial void OnNGAYNHAPChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYNHAPChanged();
    #endregion
		
		public NHAP()
		{
			this._CTPNs = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs), new Action<CTPN>(this.detach_CTPNs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAPN", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MAPN
		{
			get
			{
				return this._MAPN;
			}
			set
			{
				if ((this._MAPN != value))
				{
					this.OnMAPNChanging(value);
					this.SendPropertyChanging();
					this._MAPN = value;
					this.SendPropertyChanged("MAPN");
					this.OnMAPNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYNHAP", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NGAYNHAP
		{
			get
			{
				return this._NGAYNHAP;
			}
			set
			{
				if ((this._NGAYNHAP != value))
				{
					this.OnNGAYNHAPChanging(value);
					this.SendPropertyChanging();
					this._NGAYNHAP = value;
					this.SendPropertyChanged("NGAYNHAP");
					this.OnNGAYNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NHAP_CTPN", Storage="_CTPNs", ThisKey="MAPN", OtherKey="MAPN")]
		public EntitySet<CTPN> CTPNs
		{
			get
			{
				return this._CTPNs;
			}
			set
			{
				this._CTPNs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.NHAP = this;
		}
		
		private void detach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.NHAP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SACH")]
	public partial class SACH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MASACH;
		
		private string _TENSACH;
		
		private string _THELOAI;
		
		private string _TACGIA;
		
		private System.Nullable<int> _SL_TON;
		
		private System.Nullable<decimal> _DONGIA;
		
		private EntitySet<TON> _TONs;
		
		private EntitySet<CTHD> _CTHDs;
		
		private EntitySet<CTPN> _CTPNs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMASACHChanging(string value);
    partial void OnMASACHChanged();
    partial void OnTENSACHChanging(string value);
    partial void OnTENSACHChanged();
    partial void OnTHELOAIChanging(string value);
    partial void OnTHELOAIChanged();
    partial void OnTACGIAChanging(string value);
    partial void OnTACGIAChanged();
    partial void OnSL_TONChanging(System.Nullable<int> value);
    partial void OnSL_TONChanged();
    partial void OnDONGIAChanging(System.Nullable<decimal> value);
    partial void OnDONGIAChanged();
    #endregion
		
		public SACH()
		{
			this._TONs = new EntitySet<TON>(new Action<TON>(this.attach_TONs), new Action<TON>(this.detach_TONs));
			this._CTHDs = new EntitySet<CTHD>(new Action<CTHD>(this.attach_CTHDs), new Action<CTHD>(this.detach_CTHDs));
			this._CTPNs = new EntitySet<CTPN>(new Action<CTPN>(this.attach_CTPNs), new Action<CTPN>(this.detach_CTPNs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MASACH", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MASACH
		{
			get
			{
				return this._MASACH;
			}
			set
			{
				if ((this._MASACH != value))
				{
					this.OnMASACHChanging(value);
					this.SendPropertyChanging();
					this._MASACH = value;
					this.SendPropertyChanged("MASACH");
					this.OnMASACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSACH", DbType="NVarChar(100)")]
		public string TENSACH
		{
			get
			{
				return this._TENSACH;
			}
			set
			{
				if ((this._TENSACH != value))
				{
					this.OnTENSACHChanging(value);
					this.SendPropertyChanging();
					this._TENSACH = value;
					this.SendPropertyChanged("TENSACH");
					this.OnTENSACHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_THELOAI", DbType="NVarChar(50)")]
		public string THELOAI
		{
			get
			{
				return this._THELOAI;
			}
			set
			{
				if ((this._THELOAI != value))
				{
					this.OnTHELOAIChanging(value);
					this.SendPropertyChanging();
					this._THELOAI = value;
					this.SendPropertyChanged("THELOAI");
					this.OnTHELOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TACGIA", DbType="NVarChar(100)")]
		public string TACGIA
		{
			get
			{
				return this._TACGIA;
			}
			set
			{
				if ((this._TACGIA != value))
				{
					this.OnTACGIAChanging(value);
					this.SendPropertyChanging();
					this._TACGIA = value;
					this.SendPropertyChanged("TACGIA");
					this.OnTACGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_TON", DbType="Int")]
		public System.Nullable<int> SL_TON
		{
			get
			{
				return this._SL_TON;
			}
			set
			{
				if ((this._SL_TON != value))
				{
					this.OnSL_TONChanging(value);
					this.SendPropertyChanging();
					this._SL_TON = value;
					this.SendPropertyChanged("SL_TON");
					this.OnSL_TONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DONGIA", DbType="Money")]
		public System.Nullable<decimal> DONGIA
		{
			get
			{
				return this._DONGIA;
			}
			set
			{
				if ((this._DONGIA != value))
				{
					this.OnDONGIAChanging(value);
					this.SendPropertyChanging();
					this._DONGIA = value;
					this.SendPropertyChanged("DONGIA");
					this.OnDONGIAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_TON", Storage="_TONs", ThisKey="MASACH", OtherKey="MASACH")]
		public EntitySet<TON> TONs
		{
			get
			{
				return this._TONs;
			}
			set
			{
				this._TONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CTHD", Storage="_CTHDs", ThisKey="MASACH", OtherKey="MASACH")]
		public EntitySet<CTHD> CTHDs
		{
			get
			{
				return this._CTHDs;
			}
			set
			{
				this._CTHDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SACH_CTPN", Storage="_CTPNs", ThisKey="MASACH", OtherKey="MASACH")]
		public EntitySet<CTPN> CTPNs
		{
			get
			{
				return this._CTPNs;
			}
			set
			{
				this._CTPNs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TONs(TON entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_TONs(TON entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
		
		private void attach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_CTHDs(CTHD entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
		
		private void attach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.SACH = this;
		}
		
		private void detach_CTPNs(CTPN entity)
		{
			this.SendPropertyChanging();
			entity.SACH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THAMSO")]
	public partial class THAMSO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<int> _SL_NHAPITNHAT;
		
		private System.Nullable<int> _SL_TONTOIDATRUOCNHAP;
		
		private System.Nullable<int> _SL_TONSAUTOITHIEU;
		
		private System.Nullable<decimal> _SOTIENNOTOIDA;
		
		private System.Nullable<bool> _SUDUNGQUYDINH;
		
		private int _ID;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnSL_NHAPITNHATChanging(System.Nullable<int> value);
    partial void OnSL_NHAPITNHATChanged();
    partial void OnSL_TONTOIDATRUOCNHAPChanging(System.Nullable<int> value);
    partial void OnSL_TONTOIDATRUOCNHAPChanged();
    partial void OnSL_TONSAUTOITHIEUChanging(System.Nullable<int> value);
    partial void OnSL_TONSAUTOITHIEUChanged();
    partial void OnSOTIENNOTOIDAChanging(System.Nullable<decimal> value);
    partial void OnSOTIENNOTOIDAChanged();
    partial void OnSUDUNGQUYDINHChanging(System.Nullable<bool> value);
    partial void OnSUDUNGQUYDINHChanged();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    #endregion
		
		public THAMSO()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_NHAPITNHAT", DbType="Int")]
		public System.Nullable<int> SL_NHAPITNHAT
		{
			get
			{
				return this._SL_NHAPITNHAT;
			}
			set
			{
				if ((this._SL_NHAPITNHAT != value))
				{
					this.OnSL_NHAPITNHATChanging(value);
					this.SendPropertyChanging();
					this._SL_NHAPITNHAT = value;
					this.SendPropertyChanged("SL_NHAPITNHAT");
					this.OnSL_NHAPITNHATChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_TONTOIDATRUOCNHAP", DbType="Int")]
		public System.Nullable<int> SL_TONTOIDATRUOCNHAP
		{
			get
			{
				return this._SL_TONTOIDATRUOCNHAP;
			}
			set
			{
				if ((this._SL_TONTOIDATRUOCNHAP != value))
				{
					this.OnSL_TONTOIDATRUOCNHAPChanging(value);
					this.SendPropertyChanging();
					this._SL_TONTOIDATRUOCNHAP = value;
					this.SendPropertyChanged("SL_TONTOIDATRUOCNHAP");
					this.OnSL_TONTOIDATRUOCNHAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_TONSAUTOITHIEU", DbType="Int")]
		public System.Nullable<int> SL_TONSAUTOITHIEU
		{
			get
			{
				return this._SL_TONSAUTOITHIEU;
			}
			set
			{
				if ((this._SL_TONSAUTOITHIEU != value))
				{
					this.OnSL_TONSAUTOITHIEUChanging(value);
					this.SendPropertyChanging();
					this._SL_TONSAUTOITHIEU = value;
					this.SendPropertyChanged("SL_TONSAUTOITHIEU");
					this.OnSL_TONSAUTOITHIEUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIENNOTOIDA", DbType="Money")]
		public System.Nullable<decimal> SOTIENNOTOIDA
		{
			get
			{
				return this._SOTIENNOTOIDA;
			}
			set
			{
				if ((this._SOTIENNOTOIDA != value))
				{
					this.OnSOTIENNOTOIDAChanging(value);
					this.SendPropertyChanging();
					this._SOTIENNOTOIDA = value;
					this.SendPropertyChanged("SOTIENNOTOIDA");
					this.OnSOTIENNOTOIDAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SUDUNGQUYDINH", DbType="Bit")]
		public System.Nullable<bool> SUDUNGQUYDINH
		{
			get
			{
				return this._SUDUNGQUYDINH;
			}
			set
			{
				if ((this._SUDUNGQUYDINH != value))
				{
					this.OnSUDUNGQUYDINHChanging(value);
					this.SendPropertyChanging();
					this._SUDUNGQUYDINH = value;
					this.SendPropertyChanged("SUDUNGQUYDINH");
					this.OnSUDUNGQUYDINHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THUTIEN")]
	public partial class THUTIEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _MATHU;
		
		private string _MAKH;
		
		private System.Nullable<System.DateTime> _NGAYTHU;
		
		private System.Nullable<decimal> _SOTIENTHU;
		
		private EntityRef<KHACHHANG> _KHACHHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMATHUChanging(string value);
    partial void OnMATHUChanged();
    partial void OnMAKHChanging(string value);
    partial void OnMAKHChanged();
    partial void OnNGAYTHUChanging(System.Nullable<System.DateTime> value);
    partial void OnNGAYTHUChanged();
    partial void OnSOTIENTHUChanging(System.Nullable<decimal> value);
    partial void OnSOTIENTHUChanged();
    #endregion
		
		public THUTIEN()
		{
			this._KHACHHANG = default(EntityRef<KHACHHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MATHU", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string MATHU
		{
			get
			{
				return this._MATHU;
			}
			set
			{
				if ((this._MATHU != value))
				{
					this.OnMATHUChanging(value);
					this.SendPropertyChanging();
					this._MATHU = value;
					this.SendPropertyChanged("MATHU");
					this.OnMATHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MAKH", DbType="Char(10)")]
		public string MAKH
		{
			get
			{
				return this._MAKH;
			}
			set
			{
				if ((this._MAKH != value))
				{
					if (this._KHACHHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMAKHChanging(value);
					this.SendPropertyChanging();
					this._MAKH = value;
					this.SendPropertyChanged("MAKH");
					this.OnMAKHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NGAYTHU", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NGAYTHU
		{
			get
			{
				return this._NGAYTHU;
			}
			set
			{
				if ((this._NGAYTHU != value))
				{
					this.OnNGAYTHUChanging(value);
					this.SendPropertyChanging();
					this._NGAYTHU = value;
					this.SendPropertyChanged("NGAYTHU");
					this.OnNGAYTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SOTIENTHU", DbType="Money")]
		public System.Nullable<decimal> SOTIENTHU
		{
			get
			{
				return this._SOTIENTHU;
			}
			set
			{
				if ((this._SOTIENTHU != value))
				{
					this.OnSOTIENTHUChanging(value);
					this.SendPropertyChanging();
					this._SOTIENTHU = value;
					this.SendPropertyChanged("SOTIENTHU");
					this.OnSOTIENTHUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KHACHHANG_THUTIEN", Storage="_KHACHHANG", ThisKey="MAKH", OtherKey="MAKH", IsForeignKey=true)]
		public KHACHHANG KHACHHANG
		{
			get
			{
				return this._KHACHHANG.Entity;
			}
			set
			{
				KHACHHANG previousValue = this._KHACHHANG.Entity;
				if (((previousValue != value) 
							|| (this._KHACHHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KHACHHANG.Entity = null;
						previousValue.THUTIENs.Remove(this);
					}
					this._KHACHHANG.Entity = value;
					if ((value != null))
					{
						value.THUTIENs.Add(this);
						this._MAKH = value.MAKH;
					}
					else
					{
						this._MAKH = default(string);
					}
					this.SendPropertyChanged("KHACHHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
